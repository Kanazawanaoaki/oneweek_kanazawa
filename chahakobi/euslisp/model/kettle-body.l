;;
;; DO NOT EDIT THIS FILE
;; this file is automatically generated from euslisp+euslib version 
;;
;;
(defclass kettle-body-object
  :super cascaded-link
  :slots (sensors
         handle0
         attention0
         attention1
         joint0 ))
(defmethod kettle-body-object
  (:init
   (&rest args &key (name "kettle-body") (pos (float-vector 0 0 0)) (rot (unit-matrix 3)) &allow-other-keys)
   (let (c bc
         blink0 blink1
                 )
     (send-super* :init :name name args)

     ;; definition of link

     ;; definition of :kettle-bodyset2
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 72.5 0.0 0.0) (float-vector 66.9813 -27.7445 0.0) (float-vector 0.0 0.0 0.0)))
         (instance face :init :vertices (list (float-vector 66.9813 -27.7445 0.0) (float-vector 51.2652 -51.2652 0.0) (float-vector 0.0 0.0 0.0)))
         (instance face :init :vertices (list (float-vector 51.2652 -51.2652 0.0) (float-vector 27.7445 -66.9813 0.0) (float-vector 0.0 0.0 0.0)))
         (instance face :init :vertices (list (float-vector 27.7445 -66.9813 0.0) (float-vector -6.572474e-13 -72.5 0.0) (float-vector 0.0 0.0 0.0)))
         (instance face :init :vertices (list (float-vector -6.572474e-13 -72.5 0.0) (float-vector -27.7445 -66.9813 0.0) (float-vector 0.0 0.0 0.0)))
         (instance face :init :vertices (list (float-vector -27.7445 -66.9813 0.0) (float-vector -51.2652 -51.2652 0.0) (float-vector 0.0 0.0 0.0)))
         (instance face :init :vertices (list (float-vector -51.2652 -51.2652 0.0) (float-vector -66.9813 -27.7445 0.0) (float-vector 0.0 0.0 0.0)))
         (instance face :init :vertices (list (float-vector -66.9813 -27.7445 0.0) (float-vector -72.5 3.952363e-13 0.0) (float-vector 0.0 0.0 0.0)))
         (instance face :init :vertices (list (float-vector -72.5 3.952363e-13 0.0) (float-vector -66.9813 27.7445 0.0) (float-vector 0.0 0.0 0.0)))
         (instance face :init :vertices (list (float-vector -66.9813 27.7445 0.0) (float-vector -51.2652 51.2652 0.0) (float-vector 0.0 0.0 0.0)))
         (instance face :init :vertices (list (float-vector -51.2652 51.2652 0.0) (float-vector -27.7445 66.9813 0.0) (float-vector 0.0 0.0 0.0)))
         (instance face :init :vertices (list (float-vector -27.7445 66.9813 0.0) (float-vector 6.883228e-14 72.5 0.0) (float-vector 0.0 0.0 0.0)))
         (instance face :init :vertices (list (float-vector 6.883228e-14 72.5 0.0) (float-vector 27.7445 66.9813 0.0) (float-vector 0.0 0.0 0.0)))
         (instance face :init :vertices (list (float-vector 27.7445 66.9813 0.0) (float-vector 51.2652 51.2652 0.0) (float-vector 0.0 0.0 0.0)))
         (instance face :init :vertices (list (float-vector 51.2652 51.2652 0.0) (float-vector 66.9813 27.7445 0.0) (float-vector 0.0 0.0 0.0)))
         (instance face :init :vertices (list (float-vector 66.9813 27.7445 0.0) (float-vector 72.5 0.0 0.0) (float-vector 0.0 0.0 0.0)))
         (instance face :init :vertices (list (float-vector 83.1492 -34.4415 10.0) (float-vector 66.9813 -27.7445 0.0) (float-vector 72.5 0.0 0.0) (float-vector 90.0 0.0 10.0)))
         (instance face :init :vertices (list (float-vector 63.6396 -63.6396 10.0) (float-vector 51.2652 -51.2652 0.0) (float-vector 66.9813 -27.7445 0.0) (float-vector 83.1492 -34.4415 10.0)))
         (instance face :init :vertices (list (float-vector 34.4415 -83.1492 10.0) (float-vector 27.7445 -66.9813 0.0) (float-vector 51.2652 -51.2652 0.0) (float-vector 63.6396 -63.6396 10.0)))
         (instance face :init :vertices (list (float-vector -8.158933e-13 -90.0 10.0) (float-vector -6.572474e-13 -72.5 0.0) (float-vector 27.7445 -66.9813 0.0) (float-vector 34.4415 -83.1492 10.0)))
         (instance face :init :vertices (list (float-vector -34.4415 -83.1492 10.0) (float-vector -27.7445 -66.9813 0.0) (float-vector -6.572474e-13 -72.5 0.0) (float-vector -8.158933e-13 -90.0 10.0)))
         (instance face :init :vertices (list (float-vector -63.6396 -63.6396 10.0) (float-vector -51.2652 -51.2652 0.0) (float-vector -27.7445 -66.9813 0.0) (float-vector -34.4415 -83.1492 10.0)))
         (instance face :init :vertices (list (float-vector -83.1492 -34.4415 10.0) (float-vector -66.9813 -27.7445 0.0) (float-vector -51.2652 -51.2652 0.0) (float-vector -63.6396 -63.6396 10.0)))
         (instance face :init :vertices (list (float-vector -90.0 4.906382e-13 10.0) (float-vector -72.5 3.952363e-13 0.0) (float-vector -66.9813 -27.7445 0.0) (float-vector -83.1492 -34.4415 10.0)))
         (instance face :init :vertices (list (float-vector -83.1492 34.4415 10.0) (float-vector -66.9813 27.7445 0.0) (float-vector -72.5 3.952363e-13 0.0) (float-vector -90.0 4.906382e-13 10.0)))
         (instance face :init :vertices (list (float-vector -63.6396 63.6396 10.0) (float-vector -51.2652 51.2652 0.0) (float-vector -66.9813 27.7445 0.0) (float-vector -83.1492 34.4415 10.0)))
         (instance face :init :vertices (list (float-vector -34.4415 83.1492 10.0) (float-vector -27.7445 66.9813 0.0) (float-vector -51.2652 51.2652 0.0) (float-vector -63.6396 63.6396 10.0)))
         (instance face :init :vertices (list (float-vector 8.544697e-14 90.0 10.0) (float-vector 6.883228e-14 72.5 0.0) (float-vector -27.7445 66.9813 0.0) (float-vector -34.4415 83.1492 10.0)))
         (instance face :init :vertices (list (float-vector 34.4415 83.1492 10.0) (float-vector 27.7445 66.9813 0.0) (float-vector 6.883228e-14 72.5 0.0) (float-vector 8.544697e-14 90.0 10.0)))
         (instance face :init :vertices (list (float-vector 63.6396 63.6396 10.0) (float-vector 51.2652 51.2652 0.0) (float-vector 27.7445 66.9813 0.0) (float-vector 34.4415 83.1492 10.0)))
         (instance face :init :vertices (list (float-vector 83.1492 34.4415 10.0) (float-vector 66.9813 27.7445 0.0) (float-vector 51.2652 51.2652 0.0) (float-vector 63.6396 63.6396 10.0)))
         (instance face :init :vertices (list (float-vector 90.0 0.0 10.0) (float-vector 72.5 0.0 0.0) (float-vector 66.9813 27.7445 0.0) (float-vector 83.1492 34.4415 10.0)))
         (instance face :init :vertices (list (float-vector 48.5037 -20.0909 120.0) (float-vector 83.1492 -34.4415 10.0) (float-vector 90.0 0.0 10.0) (float-vector 52.5 0.0 120.0)))
         (instance face :init :vertices (list (float-vector 37.1231 -37.1231 120.0) (float-vector 63.6396 -63.6396 10.0) (float-vector 83.1492 -34.4415 10.0) (float-vector 48.5037 -20.0909 120.0)))
         (instance face :init :vertices (list (float-vector 20.0909 -48.5037 120.0) (float-vector 34.4415 -83.1492 10.0) (float-vector 63.6396 -63.6396 10.0) (float-vector 37.1231 -37.1231 120.0)))
         (instance face :init :vertices (list (float-vector -4.759378e-13 -52.5 120.0) (float-vector -8.158933e-13 -90.0 10.0) (float-vector 34.4415 -83.1492 10.0) (float-vector 20.0909 -48.5037 120.0)))
         (instance face :init :vertices (list (float-vector -20.0909 -48.5037 120.0) (float-vector -34.4415 -83.1492 10.0) (float-vector -8.158933e-13 -90.0 10.0) (float-vector -4.759378e-13 -52.5 120.0)))
         (instance face :init :vertices (list (float-vector -37.1231 -37.1231 120.0) (float-vector -63.6396 -63.6396 10.0) (float-vector -34.4415 -83.1492 10.0) (float-vector -20.0909 -48.5037 120.0)))
         (instance face :init :vertices (list (float-vector -48.5037 -20.0909 120.0) (float-vector -83.1492 -34.4415 10.0) (float-vector -63.6396 -63.6396 10.0) (float-vector -37.1231 -37.1231 120.0)))
         (instance face :init :vertices (list (float-vector -52.5 2.862056e-13 120.0) (float-vector -90.0 4.906382e-13 10.0) (float-vector -83.1492 -34.4415 10.0) (float-vector -48.5037 -20.0909 120.0)))
         (instance face :init :vertices (list (float-vector -48.5037 20.0909 120.0) (float-vector -83.1492 34.4415 10.0) (float-vector -90.0 4.906382e-13 10.0) (float-vector -52.5 2.862056e-13 120.0)))
         (instance face :init :vertices (list (float-vector -37.1231 37.1231 120.0) (float-vector -63.6396 63.6396 10.0) (float-vector -83.1492 34.4415 10.0) (float-vector -48.5037 20.0909 120.0)))
         (instance face :init :vertices (list (float-vector -20.0909 48.5037 120.0) (float-vector -34.4415 83.1492 10.0) (float-vector -63.6396 63.6396 10.0) (float-vector -37.1231 37.1231 120.0)))
         (instance face :init :vertices (list (float-vector 4.984406e-14 52.5 120.0) (float-vector 8.544697e-14 90.0 10.0) (float-vector -34.4415 83.1492 10.0) (float-vector -20.0909 48.5037 120.0)))
         (instance face :init :vertices (list (float-vector 20.0909 48.5037 120.0) (float-vector 34.4415 83.1492 10.0) (float-vector 8.544697e-14 90.0 10.0) (float-vector 4.984406e-14 52.5 120.0)))
         (instance face :init :vertices (list (float-vector 37.1231 37.1231 120.0) (float-vector 63.6396 63.6396 10.0) (float-vector 34.4415 83.1492 10.0) (float-vector 20.0909 48.5037 120.0)))
         (instance face :init :vertices (list (float-vector 48.5037 20.0909 120.0) (float-vector 83.1492 34.4415 10.0) (float-vector 63.6396 63.6396 10.0) (float-vector 37.1231 37.1231 120.0)))
         (instance face :init :vertices (list (float-vector 52.5 0.0 120.0) (float-vector 90.0 0.0 10.0) (float-vector 83.1492 34.4415 10.0) (float-vector 48.5037 20.0909 120.0)))
         (instance face :init :vertices (list (float-vector 47.5798 -19.7082 120.0) (float-vector 48.5037 -20.0909 120.0) (float-vector 52.5 0.0 120.0) (float-vector 51.5 0.0 120.0)))
         (instance face :init :vertices (list (float-vector 36.416 -36.416 120.0) (float-vector 37.1231 -37.1231 120.0) (float-vector 48.5037 -20.0909 120.0) (float-vector 47.5798 -19.7082 120.0)))
         (instance face :init :vertices (list (float-vector 19.7082 -47.5798 120.0) (float-vector 20.0909 -48.5037 120.0) (float-vector 37.1231 -37.1231 120.0) (float-vector 36.416 -36.416 120.0)))
         (instance face :init :vertices (list (float-vector -4.668723e-13 -51.5 120.0) (float-vector -4.759378e-13 -52.5 120.0) (float-vector 20.0909 -48.5037 120.0) (float-vector 19.7082 -47.5798 120.0)))
         (instance face :init :vertices (list (float-vector -19.7082 -47.5798 120.0) (float-vector -20.0909 -48.5037 120.0) (float-vector -4.759378e-13 -52.5 120.0) (float-vector -4.668723e-13 -51.5 120.0)))
         (instance face :init :vertices (list (float-vector -36.416 -36.416 120.0) (float-vector -37.1231 -37.1231 120.0) (float-vector -20.0909 -48.5037 120.0) (float-vector -19.7082 -47.5798 120.0)))
         (instance face :init :vertices (list (float-vector -47.5798 -19.7082 120.0) (float-vector -48.5037 -20.0909 120.0) (float-vector -37.1231 -37.1231 120.0) (float-vector -36.416 -36.416 120.0)))
         (instance face :init :vertices (list (float-vector -51.5 2.807541e-13 120.0) (float-vector -52.5 2.862056e-13 120.0) (float-vector -48.5037 -20.0909 120.0) (float-vector -47.5798 -19.7082 120.0)))
         (instance face :init :vertices (list (float-vector -47.5798 19.7082 120.0) (float-vector -48.5037 20.0909 120.0) (float-vector -52.5 2.862056e-13 120.0) (float-vector -51.5 2.807541e-13 120.0)))
         (instance face :init :vertices (list (float-vector -36.416 36.416 120.0) (float-vector -37.1231 37.1231 120.0) (float-vector -48.5037 20.0909 120.0) (float-vector -47.5798 19.7082 120.0)))
         (instance face :init :vertices (list (float-vector -19.7082 47.5798 120.0) (float-vector -20.0909 48.5037 120.0) (float-vector -37.1231 37.1231 120.0) (float-vector -36.416 36.416 120.0)))
         (instance face :init :vertices (list (float-vector 4.889465e-14 51.5 120.0) (float-vector 4.984406e-14 52.5 120.0) (float-vector -20.0909 48.5037 120.0) (float-vector -19.7082 47.5798 120.0)))
         (instance face :init :vertices (list (float-vector 19.7082 47.5798 120.0) (float-vector 20.0909 48.5037 120.0) (float-vector 4.984406e-14 52.5 120.0) (float-vector 4.889465e-14 51.5 120.0)))
         (instance face :init :vertices (list (float-vector 36.416 36.416 120.0) (float-vector 37.1231 37.1231 120.0) (float-vector 20.0909 48.5037 120.0) (float-vector 19.7082 47.5798 120.0)))
         (instance face :init :vertices (list (float-vector 47.5798 19.7082 120.0) (float-vector 48.5037 20.0909 120.0) (float-vector 37.1231 37.1231 120.0) (float-vector 36.416 36.416 120.0)))
         (instance face :init :vertices (list (float-vector 51.5 0.0 120.0) (float-vector 52.5 0.0 120.0) (float-vector 48.5037 20.0909 120.0) (float-vector 47.5798 19.7082 120.0)))
         (instance face :init :vertices (list (float-vector 73.9104 -30.6147 10.0) (float-vector 47.5798 -19.7082 120.0) (float-vector 51.5 0.0 120.0) (float-vector 80.0 0.0 10.0)))
         (instance face :init :vertices (list (float-vector 56.5685 -56.5685 10.0) (float-vector 36.416 -36.416 120.0) (float-vector 47.5798 -19.7082 120.0) (float-vector 73.9104 -30.6147 10.0)))
         (instance face :init :vertices (list (float-vector 30.6147 -73.9104 10.0) (float-vector 19.7082 -47.5798 120.0) (float-vector 36.416 -36.416 120.0) (float-vector 56.5685 -56.5685 10.0)))
         (instance face :init :vertices (list (float-vector -7.252385e-13 -80.0 10.0) (float-vector -4.668723e-13 -51.5 120.0) (float-vector 19.7082 -47.5798 120.0) (float-vector 30.6147 -73.9104 10.0)))
         (instance face :init :vertices (list (float-vector -30.6147 -73.9104 10.0) (float-vector -19.7082 -47.5798 120.0) (float-vector -4.668723e-13 -51.5 120.0) (float-vector -7.252385e-13 -80.0 10.0)))
         (instance face :init :vertices (list (float-vector -56.5685 -56.5685 10.0) (float-vector -36.416 -36.416 120.0) (float-vector -19.7082 -47.5798 120.0) (float-vector -30.6147 -73.9104 10.0)))
         (instance face :init :vertices (list (float-vector -73.9104 -30.6147 10.0) (float-vector -47.5798 -19.7082 120.0) (float-vector -36.416 -36.416 120.0) (float-vector -56.5685 -56.5685 10.0)))
         (instance face :init :vertices (list (float-vector -80.0 4.361228e-13 10.0) (float-vector -51.5 2.807541e-13 120.0) (float-vector -47.5798 -19.7082 120.0) (float-vector -73.9104 -30.6147 10.0)))
         (instance face :init :vertices (list (float-vector -73.9104 30.6147 10.0) (float-vector -47.5798 19.7082 120.0) (float-vector -51.5 2.807541e-13 120.0) (float-vector -80.0 4.361228e-13 10.0)))
         (instance face :init :vertices (list (float-vector -56.5685 56.5685 10.0) (float-vector -36.416 36.416 120.0) (float-vector -47.5798 19.7082 120.0) (float-vector -73.9104 30.6147 10.0)))
         (instance face :init :vertices (list (float-vector -30.6147 73.9104 10.0) (float-vector -19.7082 47.5798 120.0) (float-vector -36.416 36.416 120.0) (float-vector -56.5685 56.5685 10.0)))
         (instance face :init :vertices (list (float-vector 7.595286e-14 80.0 10.0) (float-vector 4.889465e-14 51.5 120.0) (float-vector -19.7082 47.5798 120.0) (float-vector -30.6147 73.9104 10.0)))
         (instance face :init :vertices (list (float-vector 30.6147 73.9104 10.0) (float-vector 19.7082 47.5798 120.0) (float-vector 4.889465e-14 51.5 120.0) (float-vector 7.595286e-14 80.0 10.0)))
         (instance face :init :vertices (list (float-vector 56.5685 56.5685 10.0) (float-vector 36.416 36.416 120.0) (float-vector 19.7082 47.5798 120.0) (float-vector 30.6147 73.9104 10.0)))
         (instance face :init :vertices (list (float-vector 73.9104 30.6147 10.0) (float-vector 47.5798 19.7082 120.0) (float-vector 36.416 36.416 120.0) (float-vector 56.5685 56.5685 10.0)))
         (instance face :init :vertices (list (float-vector 80.0 0.0 10.0) (float-vector 51.5 0.0 120.0) (float-vector 47.5798 19.7082 120.0) (float-vector 73.9104 30.6147 10.0)))
         (instance face :init :vertices (list (float-vector 73.9104 -30.6147 10.0) (float-vector 80.0 0.0 10.0) (float-vector 0.0 0.0 10.0)))
         (instance face :init :vertices (list (float-vector 80.0 0.0 10.0) (float-vector 73.9104 30.6147 10.0) (float-vector 0.0 0.0 10.0)))
         (instance face :init :vertices (list (float-vector 73.9104 30.6147 10.0) (float-vector 56.5685 56.5685 10.0) (float-vector 0.0 0.0 10.0)))
         (instance face :init :vertices (list (float-vector 56.5685 56.5685 10.0) (float-vector 30.6147 73.9104 10.0) (float-vector 0.0 0.0 10.0)))
         (instance face :init :vertices (list (float-vector 30.6147 73.9104 10.0) (float-vector 7.595286e-14 80.0 10.0) (float-vector 0.0 0.0 10.0)))
         (instance face :init :vertices (list (float-vector 7.595286e-14 80.0 10.0) (float-vector -30.6147 73.9104 10.0) (float-vector 0.0 0.0 10.0)))
         (instance face :init :vertices (list (float-vector -30.6147 73.9104 10.0) (float-vector -56.5685 56.5685 10.0) (float-vector 0.0 0.0 10.0)))
         (instance face :init :vertices (list (float-vector -56.5685 56.5685 10.0) (float-vector -73.9104 30.6147 10.0) (float-vector 0.0 0.0 10.0)))
         (instance face :init :vertices (list (float-vector -73.9104 30.6147 10.0) (float-vector -80.0 4.361228e-13 10.0) (float-vector 0.0 0.0 10.0)))
         (instance face :init :vertices (list (float-vector -80.0 4.361228e-13 10.0) (float-vector -73.9104 -30.6147 10.0) (float-vector 0.0 0.0 10.0)))
         (instance face :init :vertices (list (float-vector -73.9104 -30.6147 10.0) (float-vector -56.5685 -56.5685 10.0) (float-vector 0.0 0.0 10.0)))
         (instance face :init :vertices (list (float-vector -56.5685 -56.5685 10.0) (float-vector -30.6147 -73.9104 10.0) (float-vector 0.0 0.0 10.0)))
         (instance face :init :vertices (list (float-vector -30.6147 -73.9104 10.0) (float-vector -7.252385e-13 -80.0 10.0) (float-vector 0.0 0.0 10.0)))
         (instance face :init :vertices (list (float-vector -7.252385e-13 -80.0 10.0) (float-vector 30.6147 -73.9104 10.0) (float-vector 0.0 0.0 10.0)))
         (instance face :init :vertices (list (float-vector 30.6147 -73.9104 10.0) (float-vector 56.5685 -56.5685 10.0) (float-vector 0.0 0.0 10.0)))
         (instance face :init :vertices (list (float-vector 56.5685 -56.5685 10.0) (float-vector 73.9104 -30.6147 10.0) (float-vector 0.0 0.0 10.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 10.0 -82.4025 198.695) (float-vector -10.0 -82.4025 198.695) (float-vector -10.0 -91.7995 195.275) (float-vector 10.0 -91.7995 195.275)))
         (instance face :init :vertices (list (float-vector -10.0 -48.2005 104.725) (float-vector 10.0 -48.2005 104.725) (float-vector 10.0 -57.5975 101.305) (float-vector -10.0 -57.5975 101.305)))
         (instance face :init :vertices (list (float-vector 10.0 -82.4025 198.695) (float-vector 10.0 -48.2005 104.725) (float-vector -10.0 -48.2005 104.725) (float-vector -10.0 -82.4025 198.695)))
         (instance face :init :vertices (list (float-vector 10.0 -91.7995 195.275) (float-vector 10.0 -57.5975 101.305) (float-vector 10.0 -48.2005 104.725) (float-vector 10.0 -82.4025 198.695)))
         (instance face :init :vertices (list (float-vector -10.0 -91.7995 195.275) (float-vector -10.0 -57.5975 101.305) (float-vector 10.0 -57.5975 101.305) (float-vector 10.0 -91.7995 195.275)))
         (instance face :init :vertices (list (float-vector -10.0 -82.4025 198.695) (float-vector -10.0 -48.2005 104.725) (float-vector -10.0 -57.5975 101.305) (float-vector -10.0 -91.7995 195.275)))
         (instance face :init :vertices (list (float-vector 10.0 91.7995 195.275) (float-vector -10.0 91.7995 195.275) (float-vector -10.0 82.4025 198.695) (float-vector 10.0 82.4025 198.695)))
         (instance face :init :vertices (list (float-vector -10.0 57.5975 101.305) (float-vector 10.0 57.5975 101.305) (float-vector 10.0 48.2005 104.725) (float-vector -10.0 48.2005 104.725)))
         (instance face :init :vertices (list (float-vector 10.0 91.7995 195.275) (float-vector 10.0 57.5975 101.305) (float-vector -10.0 57.5975 101.305) (float-vector -10.0 91.7995 195.275)))
         (instance face :init :vertices (list (float-vector 10.0 82.4025 198.695) (float-vector 10.0 48.2005 104.725) (float-vector 10.0 57.5975 101.305) (float-vector 10.0 91.7995 195.275)))
         (instance face :init :vertices (list (float-vector -10.0 82.4025 198.695) (float-vector -10.0 48.2005 104.725) (float-vector 10.0 48.2005 104.725) (float-vector 10.0 82.4025 198.695)))
         (instance face :init :vertices (list (float-vector -10.0 91.7995 195.275) (float-vector -10.0 57.5975 101.305) (float-vector -10.0 48.2005 104.725) (float-vector -10.0 82.4025 198.695)))
         (instance face :init :vertices (list (float-vector 10.0 90.0 200.0) (float-vector -10.0 90.0 200.0) (float-vector -10.0 -90.0 200.0) (float-vector 10.0 -90.0 200.0)))
         (instance face :init :vertices (list (float-vector -10.0 90.0 190.0) (float-vector 10.0 90.0 190.0) (float-vector 10.0 -90.0 190.0) (float-vector -10.0 -90.0 190.0)))
         (instance face :init :vertices (list (float-vector 10.0 90.0 200.0) (float-vector 10.0 90.0 190.0) (float-vector -10.0 90.0 190.0) (float-vector -10.0 90.0 200.0)))
         (instance face :init :vertices (list (float-vector 10.0 -90.0 200.0) (float-vector 10.0 -90.0 190.0) (float-vector 10.0 90.0 190.0) (float-vector 10.0 90.0 200.0)))
         (instance face :init :vertices (list (float-vector -10.0 -90.0 200.0) (float-vector -10.0 -90.0 190.0) (float-vector 10.0 -90.0 190.0) (float-vector 10.0 -90.0 200.0)))
         (instance face :init :vertices (list (float-vector -10.0 90.0 200.0) (float-vector -10.0 90.0 190.0) (float-vector -10.0 -90.0 190.0) (float-vector -10.0 -90.0 200.0)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 8.66025 -134.33 114.103) (float-vector 10.0 -130.0 116.603) (float-vector 8.66025 -125.67 119.103) (float-vector 5.0 -122.5 120.933) (float-vector 5.329071e-15 -121.34 121.603) (float-vector -5.0 -122.5 120.933) (float-vector -8.66025 -125.67 119.103) (float-vector -10.0 -130.0 116.603) (float-vector -8.66025 -134.33 114.103) (float-vector -5.0 -137.5 112.272) (float-vector -1.598721e-14 -138.66 111.603) (float-vector 5.0 -137.5 112.272)))
         (instance face :init :vertices (list (float-vector 10.0 -80.0 30.0) (float-vector 8.66025 -84.3301 27.5) (float-vector 5.0 -87.5 25.6699) (float-vector -1.598721e-14 -88.6603 25.0) (float-vector -5.0 -87.5 25.6699) (float-vector -8.66025 -84.3301 27.5) (float-vector -10.0 -80.0 30.0) (float-vector -8.66025 -75.6699 32.5) (float-vector -5.0 -72.5 34.3301) (float-vector 5.329071e-15 -71.3397 35.0) (float-vector 5.0 -72.5 34.3301) (float-vector 8.66025 -75.6699 32.5)))
         (instance face :init :vertices (list (float-vector 8.66025 -134.33 114.103) (float-vector 8.66025 -84.3301 27.5) (float-vector 10.0 -80.0 30.0) (float-vector 10.0 -130.0 116.603)))
         (instance face :init :vertices (list (float-vector 5.0 -137.5 112.272) (float-vector 5.0 -87.5 25.6699) (float-vector 8.66025 -84.3301 27.5) (float-vector 8.66025 -134.33 114.103)))
         (instance face :init :vertices (list (float-vector -1.598721e-14 -138.66 111.603) (float-vector -1.598721e-14 -88.6603 25.0) (float-vector 5.0 -87.5 25.6699) (float-vector 5.0 -137.5 112.272)))
         (instance face :init :vertices (list (float-vector -5.0 -137.5 112.272) (float-vector -5.0 -87.5 25.6699) (float-vector -1.598721e-14 -88.6603 25.0) (float-vector -1.598721e-14 -138.66 111.603)))
         (instance face :init :vertices (list (float-vector -8.66025 -134.33 114.103) (float-vector -8.66025 -84.3301 27.5) (float-vector -5.0 -87.5 25.6699) (float-vector -5.0 -137.5 112.272)))
         (instance face :init :vertices (list (float-vector -10.0 -130.0 116.603) (float-vector -10.0 -80.0 30.0) (float-vector -8.66025 -84.3301 27.5) (float-vector -8.66025 -134.33 114.103)))
         (instance face :init :vertices (list (float-vector -8.66025 -125.67 119.103) (float-vector -8.66025 -75.6699 32.5) (float-vector -10.0 -80.0 30.0) (float-vector -10.0 -130.0 116.603)))
         (instance face :init :vertices (list (float-vector -5.0 -122.5 120.933) (float-vector -5.0 -72.5 34.3301) (float-vector -8.66025 -75.6699 32.5) (float-vector -8.66025 -125.67 119.103)))
         (instance face :init :vertices (list (float-vector 5.329071e-15 -121.34 121.603) (float-vector 5.329071e-15 -71.3397 35.0) (float-vector -5.0 -72.5 34.3301) (float-vector -5.0 -122.5 120.933)))
         (instance face :init :vertices (list (float-vector 5.0 -122.5 120.933) (float-vector 5.0 -72.5 34.3301) (float-vector 5.329071e-15 -71.3397 35.0) (float-vector 5.329071e-15 -121.34 121.603)))
         (instance face :init :vertices (list (float-vector 8.66025 -125.67 119.103) (float-vector 8.66025 -75.6699 32.5) (float-vector 5.0 -72.5 34.3301) (float-vector 5.0 -122.5 120.933)))
         (instance face :init :vertices (list (float-vector 10.0 -130.0 116.603) (float-vector 10.0 -80.0 30.0) (float-vector 8.66025 -75.6699 32.5) (float-vector 8.66025 -125.67 119.103)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color :red)
     (send (elt bc 1) :set-color :darkgreen)
     (send (elt bc 2) :set-color :red)
     (setq blink0 (instance bodyset-link :init (make-cascoords) :bodies bc :name :kettle-bodyset2 :weight 1 :centroid (float-vector 0.0 0.0 0.0) :inertia-tensor #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))

     ;; definition of :kettle-bodyset3
     (setq bc (list
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 10.0 -82.4025 97.3895) (float-vector -10.0 -82.4025 97.3895) (float-vector -10.0 -91.7995 93.9693) (float-vector 10.0 -91.7995 93.9693)))
         (instance face :init :vertices (list (float-vector -10.0 -48.2005 3.4202) (float-vector 10.0 -48.2005 3.4202) (float-vector 10.0 -57.5975 0.0) (float-vector -10.0 -57.5975 0.0)))
         (instance face :init :vertices (list (float-vector 10.0 -82.4025 97.3895) (float-vector 10.0 -48.2005 3.4202) (float-vector -10.0 -48.2005 3.4202) (float-vector -10.0 -82.4025 97.3895)))
         (instance face :init :vertices (list (float-vector 10.0 -91.7995 93.9693) (float-vector 10.0 -57.5975 0.0) (float-vector 10.0 -48.2005 3.4202) (float-vector 10.0 -82.4025 97.3895)))
         (instance face :init :vertices (list (float-vector -10.0 -91.7995 93.9693) (float-vector -10.0 -57.5975 0.0) (float-vector 10.0 -57.5975 0.0) (float-vector 10.0 -91.7995 93.9693)))
         (instance face :init :vertices (list (float-vector -10.0 -82.4025 97.3895) (float-vector -10.0 -48.2005 3.4202) (float-vector -10.0 -57.5975 0.0) (float-vector -10.0 -91.7995 93.9693)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 10.0 91.7995 93.9693) (float-vector -10.0 91.7995 93.9693) (float-vector -10.0 82.4025 97.3895) (float-vector 10.0 82.4025 97.3895)))
         (instance face :init :vertices (list (float-vector -10.0 57.5975 1.421085e-14) (float-vector 10.0 57.5975 1.421085e-14) (float-vector 10.0 48.2005 3.4202) (float-vector -10.0 48.2005 3.4202)))
         (instance face :init :vertices (list (float-vector 10.0 91.7995 93.9693) (float-vector 10.0 57.5975 1.421085e-14) (float-vector -10.0 57.5975 1.421085e-14) (float-vector -10.0 91.7995 93.9693)))
         (instance face :init :vertices (list (float-vector 10.0 82.4025 97.3895) (float-vector 10.0 48.2005 3.4202) (float-vector 10.0 57.5975 1.421085e-14) (float-vector 10.0 91.7995 93.9693)))
         (instance face :init :vertices (list (float-vector -10.0 82.4025 97.3895) (float-vector -10.0 48.2005 3.4202) (float-vector 10.0 48.2005 3.4202) (float-vector 10.0 82.4025 97.3895)))
         (instance face :init :vertices (list (float-vector -10.0 91.7995 93.9693) (float-vector -10.0 57.5975 1.421085e-14) (float-vector -10.0 48.2005 3.4202) (float-vector -10.0 82.4025 97.3895)))
       ))
       (instance faceset :init :faces (list
         (instance face :init :vertices (list (float-vector 10.0 90.0 98.6947) (float-vector -10.0 90.0 98.6947) (float-vector -10.0 -90.0 98.6947) (float-vector 10.0 -90.0 98.6947)))
         (instance face :init :vertices (list (float-vector -10.0 90.0 88.6947) (float-vector 10.0 90.0 88.6947) (float-vector 10.0 -90.0 88.6947) (float-vector -10.0 -90.0 88.6947)))
         (instance face :init :vertices (list (float-vector 10.0 90.0 98.6947) (float-vector 10.0 90.0 88.6947) (float-vector -10.0 90.0 88.6947) (float-vector -10.0 90.0 98.6947)))
         (instance face :init :vertices (list (float-vector 10.0 -90.0 98.6947) (float-vector 10.0 -90.0 88.6947) (float-vector 10.0 90.0 88.6947) (float-vector 10.0 90.0 98.6947)))
         (instance face :init :vertices (list (float-vector -10.0 -90.0 98.6947) (float-vector -10.0 -90.0 88.6947) (float-vector 10.0 -90.0 88.6947) (float-vector 10.0 -90.0 98.6947)))
         (instance face :init :vertices (list (float-vector -10.0 90.0 98.6947) (float-vector -10.0 90.0 88.6947) (float-vector -10.0 -90.0 88.6947) (float-vector -10.0 -90.0 98.6947)))
       ))
       ))
     (dolist (b (cdr bc)) (send (car bc) :assoc b))
     (send (elt bc 0) :set-color (list))
     (send (elt bc 1) :set-color (list))
     (send (elt bc 2) :set-color (list))
     (setq blink1 (instance bodyset-link :init (make-cascoords) :bodies bc :name :kettle-bodyset3 :weight 1 :centroid (float-vector 0.0 0.0 0.0) :inertia-tensor #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))

     ;; definition of assoc
     (send blink1 :newcoords (make-coords :pos (float-vector 0.0 0.0 101.305) :rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0))))
     (send blink0 :assoc blink1)
     (send self :assoc blink0)

     ;; definition of end-coords

     ;; definition of joint

     ;; definition of :handle-joint
     (setq joint0 (instance rotational-joint :init
     			     :parent-link blink0 :child-link blink1 :name :handle-joint :axis :y 
     			     :min  -10.0 :max  105.0 :max-joint-velocity 5 :max-joint-torque 100))


     ;; definition of :handle
     (setq handle0 (make-cascoords :pos (float-vector 0.0 0.0 195.0) :rot #2f((1.0 0.0 0.0) (0.0 2.220446e-16 -1.0) (0.0 1.0 2.220446e-16)) :name "handle0"))
     (send blink0 :assoc handle0)

     ;; definition of :attention
     (setq attention0 (make-cascoords :pos (float-vector 0.0 -120.0 100.0) :rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) :name "attention0"))
     (send blink0 :assoc attention0)
     (setq attention1 (make-cascoords :pos (float-vector 0.0 0.0 100.0) :rot #2f((1.0 0.0 0.0) (0.0 1.0 0.0) (0.0 0.0 1.0)) :name "attention0"))
     (send blink0 :assoc attention1)

     
     ;; init-ending 
     (setq links (list blink0 blink1))
     (setq joint-list (list joint0))
     (send self :init-ending)
     (send self :move-to (make-coords :pos pos :rot rot))
     (send-all links :worldcoords)

     self))

  (:handle-joint (&rest args) (forward-message-to joint0 args))
  (:handle (&rest args) (forward-message-to-all (list  handle0) args))
  (:handle-handle0 (&rest args) (forward-message-to handle0 args))
  (:attention (&rest args) (forward-message-to-all (list  attention0 attention1) args))
  (:attention-attention0 (&rest args) (forward-message-to attention0 args))
  (:attention-attention1 (&rest args) (forward-message-to attention1 args))
  (:button (&rest args) (forward-message-to-all (list ) args))
  )

(defun kettle-body (&rest args) (instance* kettle-body-object :init args))
;; (format *error-output* "(instance kettle-object :init) for generating model~%")
