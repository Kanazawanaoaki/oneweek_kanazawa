(defun test-pqp-loop (&optional (close? t)
                                (p (list #f(15 0 0) #f(15 120 0) #f(-15 120 0) #f(-15 0 0) #f(-120 0 0) #f(-120 -30 0) #f(120 -30 0) #f(120 0 0))))
  (setq obj1 (make-prism (append p (if close? (list (copy-seq (car p))))) 10))
  (setq obj2 (make-cube 1.0 1.0 100))
  (objects (list obj1 obj2))
  (let* ((cnt 0) col)
    (do-until-key
     (send obj2 :newcoords (make-coords :pos (float-vector (* 50 (sin (* 0.01 (incf cnt)))) (* 50 (cos (* 0.01 cnt))) 0)))
     (send *viewer* :draw-objects)
     (x::window-main-one)
     (setq col (print (pqp-collision-check obj1 obj2)))
     (if (eq col 1) (send obj1 :set-color (float-vector 1 0 0))
       (send obj1 :set-color (float-vector 0 1 0)))
     (unix::usleep (* 10 1000)))))
